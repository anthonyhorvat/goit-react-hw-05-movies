{"version":3,"file":"static/js/485.d7bb8c5b.chunk.js","mappings":"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","sources":["API/API.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c4a9dfca9cba37da86d3cf680152b639';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${API_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${API_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n};\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    return [];\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${API_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    return [];\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieListContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  gap: 20px;\n  margin: 0 -10px;\n`;\n\nexport const MovieListItem = styled.li`\n  width: 200px;\n  text-align: center;\n  list-style: none;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #333;\n  display: block;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const PosterImage = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 8px 8px 0 0;\n`;\n\nexport const MovieTitle = styled.p`\n  padding: 10px;\n  margin: 0;\n  background-color: #fff;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieListContainer,\n  MovieListItem,\n  StyledLink,\n  PosterImage,\n  MovieTitle,\n} from './MovieList.styled';\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovieListContainer>\n      {movies.map(movie => (\n        <MovieListItem key={movie.id}>\n          <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            <PosterImage\n              src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              alt={`${movie.title} Poster`}\n            />\n            <MovieTitle>{movie.title}</MovieTitle>\n          </StyledLink>\n        </MovieListItem>\n      ))}\n    </MovieListContainer>\n  );\n};\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h2`\n  text-align: center;\n  font-size: 2.5rem;\n  color: #3b3a36;\n  margin-bottom: 40px;\n  font-family: 'Poppins', sans-serif;\n  text-transform: uppercase;\n\n  cursor: pointer;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'API/API';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport { PageTitle } from './Home.styled';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      setLoading(true);\n      try {\n        const trendingMovies = await getTrendingMovies();\n        setTrendingMovies(trendingMovies);\n      } catch (error) {\n        console.error('Error fetching trending movies', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n  return (\n    <main>\n      <PageTitle>Trending today</PageTitle>\n      <MovieList movies={trendingMovies} />\n      {loading && <Loader />}\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["API_URL","API_KEY","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","results","t0","console","error","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchCast","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","MovieListContainer","styled","_templateObject","_taggedTemplateLiteral","MovieListItem","_templateObject2","StyledLink","Link","_templateObject3","PosterImage","_templateObject4","MovieTitle","_templateObject5","movies","location","useLocation","_jsx","children","map","movie","_jsxs","to","id","state","from","src","poster_path","alt","title","PageTitle","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","_useState3","_useState4","loading","setLoading","useEffect","fetchTrendingMovies","_trendingMovies","finish","MovieList","Loader"],"sourceRoot":""}