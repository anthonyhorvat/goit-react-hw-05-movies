{"version":3,"file":"static/js/736.b30d248d.chunk.js","mappings":"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","sources":["API/API.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c4a9dfca9cba37da86d3cf680152b639';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${API_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${API_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n};\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    return [];\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${API_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    return [];\n  }\n};\n","import styled from 'styled-components';\nexport const CastContainer = styled.div`\n  margin-top: 30px;\n\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 15px;\n    color: #333;\n  }\n\n  ul {\n    display: flex;\n    flex-wrap: wrap;\n    padding: 0;\n    gap: 20px;\n    margin: 0 -10px;\n    list-style: none;\n\n    li {\n      width: 200px;\n      text-align: center;\n      background-color: #f9f9f9;\n      padding: 10px;\n      border-radius: 8px;\n      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n      transition: transform 0.3s ease;\n\n      &:hover {\n        transform: scale(1.05);\n      }\n\n      img {\n        width: 100%;\n        height: auto;\n        border-radius: 8px 8px 0 0;\n      }\n\n      h3 {\n        margin: 10px 0 5px;\n        font-size: 1.5rem;\n        color: #333;\n      }\n\n      p {\n        margin: 0;\n        color: #666;\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { fetchCast } from 'API/API';\nimport Loader from 'components/Loader/Loader';\nimport { useParams } from 'react-router-dom';\nimport { CastContainer } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const defaultImg =\n    '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>';\n\n  useEffect(() => {\n    const getMovieCredits = async () => {\n      if (!movieId) return;\n      setLoading(true);\n      try {\n        const actors = await fetchCast(movieId);\n        setCast(actors);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getMovieCredits();\n  }, [movieId]);\n\n  return (\n    <CastContainer>\n      {loading && <Loader />}\n      <h2>Cast</h2>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                  : defaultImg\n              }\n              alt={actor.original_name}\n              width={100}\n            />\n            <h3>{actor.name}</h3>\n            <p>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </CastContainer>\n  );\n};\n\nexport default Cast;\n"],"names":["API_URL","API_KEY","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","results","t0","console","error","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchCast","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","CastContainer","styled","_templateObject","_taggedTemplateLiteral","useParams","_useState","useState","_useState2","_slicedToArray","setCast","_useState3","_useState4","loading","setLoading","useEffect","getMovieCredits","actors","log","finish","_jsxs","children","_jsx","Loader","map","actor","src","profile_path","alt","original_name","width","name","character","id"],"sourceRoot":""}