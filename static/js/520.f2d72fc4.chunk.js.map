{"version":3,"file":"static/js/520.f2d72fc4.chunk.js","mappings":"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","sources":["API/API.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c4a9dfca9cba37da86d3cf680152b639';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${API_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${API_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n};\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    return [];\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${API_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    return [];\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieListContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  gap: 20px;\n  margin: 0 -10px;\n`;\n\nexport const MovieListItem = styled.li`\n  width: 200px;\n  text-align: center;\n  list-style: none;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #333;\n  display: block;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const PosterImage = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 8px 8px 0 0;\n`;\n\nexport const MovieTitle = styled.p`\n  padding: 10px;\n  margin: 0;\n  background-color: #fff;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieListContainer,\n  MovieListItem,\n  StyledLink,\n  PosterImage,\n  MovieTitle,\n} from './MovieList.styled';\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovieListContainer>\n      {movies.map(movie => (\n        <MovieListItem key={movie.id}>\n          <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            <PosterImage\n              src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              alt={`${movie.title} Poster`}\n            />\n            <MovieTitle>{movie.title}</MovieTitle>\n          </StyledLink>\n        </MovieListItem>\n      ))}\n    </MovieListContainer>\n  );\n};\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const StyledSearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  max-width: 400px;\n  margin: 20px auto;\n  padding: 10px;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  background-color: #333;\n`;\n\nexport const SearchInput = styled.input`\n  flex: 1;\n  padding: 8px;\n  border: none;\n  border-radius: 4px;\n  margin-right: 10px;\n  font-size: 16px;\n  outline: none;\n`;\n\nexport const SearchButton = styled.button`\n  padding: 8px 16px;\n  background-color: #333;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #4a4949;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  SearchInput,\n  SearchButton,\n  StyledSearchForm,\n} from './SearchForm.styled';\n\nconst SearchForm = ({ searchMovies }) => {\n  const [query, setQuery] = useState('');\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    searchMovies(query.toLowerCase());\n  };\n\n  return (\n    <StyledSearchForm onSubmit={handleSubmit}>\n      <SearchInput\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        value={query}\n        onChange={handleInputChange}\n      />\n      <SearchButton type=\"submit\">Search</SearchButton>\n    </StyledSearchForm>\n  );\n};\n\nexport default SearchForm;\n","import React, { useState, useEffect } from 'react';\nimport { searchMovies } from 'API/API';\nimport { useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const searchRequest = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n    const getMovies = async () => {\n      setLoading(true);\n      try {\n        const foundedMovies = await searchMovies(searchRequest);\n        if (foundedMovies.length === 0) {\n          alert('Oops! Movie is not found');\n        }\n        setSearchResults(foundedMovies);\n      } catch (error) {\n        setError('Ooops. Something went wrong...');\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovies();\n  }, [searchRequest]);\n\n  function onSubmit(value) {\n    setSearchParams({ query: `${value}` });\n  }\n\n  return (\n    <main>\n      <SearchForm searchMovies={onSubmit} />\n      {loading && <Loader />}\n      {error && <div>{error}</div>}\n\n      {searchResults && <MovieList movies={searchResults} />}\n    </main>\n  );\n};\n\nexport default Movies;\n\n// const Movies = () => {\n//   const [movies, setMovies] = useState([\n//     'movie-1',\n//     'movie-2',\n//     'movie-3',\n//     'movie-4',\n//     'movie-5',\n//   ]);\n//   const [searchParams, setSearchParams] = useSearchParams();\n//   const movieId = searchParams.get('movieId');\n\n//   const visibleMovies = movies.filter(movie => movie.includes(movieId));\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         value={movieId}\n//         onChange={evt => setSearchParams({ movieId: evt.target.value })}\n//       ></input>\n//       <br />\n//       {movies.map(movie => {\n//         return (\n//           <Link key={movie} to={`${movie}`}>\n//             {movie}\n//             <br />\n//           </Link>\n//         );\n//       })}\n//     </div>\n//   );\n// };\n\n// export default Movies;\n"],"names":["API_URL","API_KEY","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","results","t0","console","error","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchCast","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","MovieListContainer","styled","_templateObject","_taggedTemplateLiteral","MovieListItem","_templateObject2","StyledLink","Link","_templateObject3","PosterImage","_templateObject4","MovieTitle","_templateObject5","movies","location","useLocation","_jsx","children","map","movie","_jsxs","to","id","state","from","src","poster_path","alt","title","StyledSearchForm","SearchInput","SearchButton","_useState","useState","_useState2","_slicedToArray","setQuery","onSubmit","event","preventDefault","toLowerCase","type","name","autoFocus","value","onChange","target","searchResults","setSearchResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setError","searchRequest","get","useEffect","getMovies","foundedMovies","length","alert","log","finish","SearchForm","Loader","MovieList"],"sourceRoot":""}