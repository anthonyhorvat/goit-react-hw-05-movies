{"version":3,"file":"static/js/186.05ebc3b6.chunk.js","mappings":"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","sources":["API/API.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c4a9dfca9cba37da86d3cf680152b639';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${API_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${API_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n};\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    return [];\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${API_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    return [];\n  }\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'API/API';\nimport Loader from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      if (!movieId) return;\n      setLoading(true);\n      try {\n        const reviewsData = await fetchReviews(movieId);\n        setReviews(reviewsData);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {reviews.length !== 0 && (\n        <div>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h2>Author: {review.author}</h2>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_URL","API_KEY","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","results","t0","console","error","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchCast","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","loading","setLoading","useEffect","getMovieReviews","reviewsData","log","finish","_jsxs","_Fragment","children","_jsx","Loader","length","map","review","author","content","id"],"sourceRoot":""}